{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Donkey Car Docs Donkey Car Docs\u306b\u3064\u3044\u3066 Donkey Car Docs\u306f\u3001Donkey Car\u306e\u7d44\u307f\u7acb\u3066\u3084\u5b66\u7fd2\u65b9\u6cd5\u3092\u307e\u3068\u3081\u305fDocs\u306b\u306a\u3063\u3066\u3044\u308b\u3002 \u4fee\u6b63\u4f9d\u983c\u7b49 Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002","title":"Donkey Car Docs"},{"location":"#donkey-car-docs","text":"","title":"Donkey Car Docs"},{"location":"#donkey-car-docs_1","text":"Donkey Car Docs\u306f\u3001Donkey Car\u306e\u7d44\u307f\u7acb\u3066\u3084\u5b66\u7fd2\u65b9\u6cd5\u3092\u307e\u3068\u3081\u305fDocs\u306b\u306a\u3063\u3066\u3044\u308b\u3002","title":"Donkey Car Docs\u306b\u3064\u3044\u3066"},{"location":"#_1","text":"Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002","title":"\u4fee\u6b63\u4f9d\u983c\u7b49"},{"location":"1.sim/","text":"Donkey Car Simulator Summary DonkeyCar v2.5.7\u3067\u306f\u3001Simulatore\u9023\u643a\u304c\u5ec3\u6b62\u3055\u308c\u307e\u3057\u305f\u3002\u52d5\u4f5c\u3059\u308bRevision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002 Donkey Car Simulator\u3067\u5b9f\u6a5f\u304c\u306a\u304f\u3066\u3082\u3001\u81ea\u52d5\u904b\u8ee2\u306e\u30b9\u30ad\u30fc\u30e0\u3092\u8a66\u3059\u4e8b\u304c\u53ef\u80fd\u3002 Donkey Car Simulator Donket Car Simulator\u306f\u3001SDSandbox\u3092\u30d9\u30fc\u30b9\u306bDonkey Car\u4ed5\u69d8\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3082\u306e\u3068\u306a\u308b\u3002 \u9805\u76ee \u5024 SdSandbox https://github.com/tawnkramer/sdsandbox SdSandbox Donkey Branch https://github.com/tawnkramer/sdsandbox/tree/donkey Donkey Car Simulator\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 Donkey Car\u306f\u3001Donkey Car Official Docs\u306e\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u3002 https://docs.donkeycar.com/guide/simulator/ Donkey Car Simulator\u3067\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u306e\u4f5c\u6210 \u30c7\u30fc\u30bf\u306f\u3001log\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002OSX\u30e6\u30fc\u30b6\u306f\u3001donkey_simulator\u3092/Application\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\u3057\u3001donkey_simulator\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306blog\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001meta.json\u3092\u4f5c\u6210\u3059\u308b\u3002 \u30c7\u30fc\u30bf\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u306blog\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3059\u308b\u3002 log\u30d5\u30a9\u30eb\u30c0\u306b\u3001 meta.json \u3092\u4f5c\u6210\u3059\u308b\u3002 1 {\"inputs\":[\"cam/image_array\",\"user/angle\",\"user/throttle\",\"user/mode\"],\"types\":[\"image_array\",\"float\",\"float\",\"str\"]} Menu\u304b\u3089Joystick/Keyboard w Rec\u3092\u9078\u3076\u3002 \u5b9f\u969b\u306e\u30b3\u30fc\u30b9\u3092\u8d70\u3089\u305b\u3066\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3002 10000\u30ed\u30b0\u3092\u76ee\u5b89\u306b\u3001\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u3002 \u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u5834\u6240 \u30a2\u30d7\u30ea\u306e\u5834\u6240\u306elog\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002 Warning OSX\u306e\u5834\u5408\u3001\u30c7\u30fc\u30bf\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u8eab\u306elog\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002 ! \u4e0b\u8a18\u306e\u3088\u3046\u306a\u753b\u50cf\u3068JSON\u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb 0_cam-image_array_.jpg record_0.json 1 {\"cam/image_array\":\"0_cam-image_array_.jpg\",\"user/throttle\":0.0,\"user/angle\":0.0,\"user/mode\":\"user\"} \u753b\u50cf\u3068JSON\u306f\u3001\u4e0a\u8a18\u306e\u7d44\u307f\u5408\u308f\u305b x \u4f5c\u6210\u679a\u6570\u306e\u6570\u306b\u306a\u308b\u3002\u76ee\u5b89\u306710,000\u30c7\u30fc\u30bf\u30fb\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u3092\u76ee\u6a19\u3068\u3059\u308b\u3002","title":"Donkey Car Simulator"},{"location":"1.sim/#donkey-car-simulator","text":"Summary DonkeyCar v2.5.7\u3067\u306f\u3001Simulatore\u9023\u643a\u304c\u5ec3\u6b62\u3055\u308c\u307e\u3057\u305f\u3002\u52d5\u4f5c\u3059\u308bRevision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002 Donkey Car Simulator\u3067\u5b9f\u6a5f\u304c\u306a\u304f\u3066\u3082\u3001\u81ea\u52d5\u904b\u8ee2\u306e\u30b9\u30ad\u30fc\u30e0\u3092\u8a66\u3059\u4e8b\u304c\u53ef\u80fd\u3002","title":"Donkey Car Simulator"},{"location":"1.sim/#donkey-car-simulator_1","text":"Donket Car Simulator\u306f\u3001SDSandbox\u3092\u30d9\u30fc\u30b9\u306bDonkey Car\u4ed5\u69d8\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3082\u306e\u3068\u306a\u308b\u3002 \u9805\u76ee \u5024 SdSandbox https://github.com/tawnkramer/sdsandbox SdSandbox Donkey Branch https://github.com/tawnkramer/sdsandbox/tree/donkey","title":"Donkey Car Simulator"},{"location":"1.sim/#donkey-car-simulator_2","text":"Donkey Car\u306f\u3001Donkey Car Official Docs\u306e\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u3002 https://docs.donkeycar.com/guide/simulator/","title":"Donkey Car Simulator\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9"},{"location":"1.sim/#donkey-car-simulator_3","text":"\u30c7\u30fc\u30bf\u306f\u3001log\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002OSX\u30e6\u30fc\u30b6\u306f\u3001donkey_simulator\u3092/Application\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\u3057\u3001donkey_simulator\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306blog\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001meta.json\u3092\u4f5c\u6210\u3059\u308b\u3002 \u30c7\u30fc\u30bf\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u306blog\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3059\u308b\u3002 log\u30d5\u30a9\u30eb\u30c0\u306b\u3001 meta.json \u3092\u4f5c\u6210\u3059\u308b\u3002 1 {\"inputs\":[\"cam/image_array\",\"user/angle\",\"user/throttle\",\"user/mode\"],\"types\":[\"image_array\",\"float\",\"float\",\"str\"]} Menu\u304b\u3089Joystick/Keyboard w Rec\u3092\u9078\u3076\u3002 \u5b9f\u969b\u306e\u30b3\u30fc\u30b9\u3092\u8d70\u3089\u305b\u3066\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3002 10000\u30ed\u30b0\u3092\u76ee\u5b89\u306b\u3001\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u3002","title":"Donkey Car Simulator\u3067\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u306e\u4f5c\u6210"},{"location":"1.sim/#_1","text":"\u30a2\u30d7\u30ea\u306e\u5834\u6240\u306elog\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002 Warning OSX\u306e\u5834\u5408\u3001\u30c7\u30fc\u30bf\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u8eab\u306elog\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002 ! \u4e0b\u8a18\u306e\u3088\u3046\u306a\u753b\u50cf\u3068JSON\u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002","title":"\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u5834\u6240"},{"location":"1.sim/#_2","text":"0_cam-image_array_.jpg record_0.json 1 {\"cam/image_array\":\"0_cam-image_array_.jpg\",\"user/throttle\":0.0,\"user/angle\":0.0,\"user/mode\":\"user\"} \u753b\u50cf\u3068JSON\u306f\u3001\u4e0a\u8a18\u306e\u7d44\u307f\u5408\u308f\u305b x \u4f5c\u6210\u679a\u6570\u306e\u6570\u306b\u306a\u308b\u3002\u76ee\u5b89\u306710,000\u30c7\u30fc\u30bf\u30fb\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u3092\u76ee\u6a19\u3068\u3059\u308b\u3002","title":"\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb"},{"location":"2.dev/","text":"Donkey Car \u5b66\u7fd2\u74b0\u5883\u306e\u69cb\u7bc9 Summary Donkey Car Simulator\u3068\u306e\u9023\u643a\u306f\u3001DonkeyCar v2.5.7\u3067\u306f\u5ec3\u6b62\u3002\u305d\u306e\u305f\u3081\u3001Donkey Car Simulator\u3068\u9023\u643a\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Revision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002 Donkey Car\u306e\u5b66\u7fd2\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002Donkey Car\u306e\u5b66\u7fd2\u306f\u3001RapPi3\u5074\u3067\u306f\u306a\u304f\u3001PC\u5074\u3067\u304a\u3053\u306a\u3044\u307e\u3059\u3002\u4e00\u822c\u7684\u306aPC\u306720-30\u5206\u7a0b\u5ea6\u306e\u5b66\u7fd2\u3001GPU\u642d\u8f09\u306ePC\u3067\u6570\u5206\u306e\u5b66\u7fd2\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002 \u53c2\u8003\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 PC\u5074\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3001\u74b0\u5883\u7b49\u306b\u5927\u304d\u304f\u4f9d\u5b58\u3057\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u3001 Donkey Car \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Git clone 1 $ mkdir ~/Documents/workspace_donkey Warning \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0 ~/Documents/workspace_donkey \u306b\u3057\u3066\u3044\u307e\u3059\u3002\u304a\u4f7f\u3044\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u3001\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u306f\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u6307\u5b9a\u3067\u5927\u4e08\u592b\u3067\u3059\u3002 1 2 3 4 cd ~/Documents/workspace_donkey git clone https://github.com/autorope/donkeycar/ cd donkeycar git checkout master Warning Simulator\u3068\u9023\u643a\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u4f5c\u696d\u306e\u5f8c\u306b\u3001 git checkout 344127b \u3067 344127b\u306e\u30ea\u30d3\u30b8\u30e7\u30f3\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 Warning Proxy\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001 git config --global http.proxy http://proxy.aaa.com:8080 \u7b49\u3067Proxy\u3092\u4e8b\u524d\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3002 Conda\u74b0\u5883 1 2 conda env create -f install/envs/mac.yml source activate donkey Console\u306b(donkey) \u306e\u6587\u5b57\u5217\u304c\u3067\u304d\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002 Warining conda\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\u4eba\u306f\u3001 miniconda \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 TensorFlow\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 pip install tensorflow==1.8.0 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 pip install -e . \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210 1 donkey createcar ~/mycar","title":"Donkey Car \u5b66\u7fd2\u74b0\u5883\u306e\u69cb\u7bc9"},{"location":"2.dev/#donkey-car","text":"Summary Donkey Car Simulator\u3068\u306e\u9023\u643a\u306f\u3001DonkeyCar v2.5.7\u3067\u306f\u5ec3\u6b62\u3002\u305d\u306e\u305f\u3081\u3001Donkey Car Simulator\u3068\u9023\u643a\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Revision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002 Donkey Car\u306e\u5b66\u7fd2\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002Donkey Car\u306e\u5b66\u7fd2\u306f\u3001RapPi3\u5074\u3067\u306f\u306a\u304f\u3001PC\u5074\u3067\u304a\u3053\u306a\u3044\u307e\u3059\u3002\u4e00\u822c\u7684\u306aPC\u306720-30\u5206\u7a0b\u5ea6\u306e\u5b66\u7fd2\u3001GPU\u642d\u8f09\u306ePC\u3067\u6570\u5206\u306e\u5b66\u7fd2\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002","title":"Donkey Car \u5b66\u7fd2\u74b0\u5883\u306e\u69cb\u7bc9"},{"location":"2.dev/#_1","text":"PC\u5074\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3001\u74b0\u5883\u7b49\u306b\u5927\u304d\u304f\u4f9d\u5b58\u3057\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u3001 Donkey Car \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u53c2\u8003\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"},{"location":"2.dev/#git-clone","text":"1 $ mkdir ~/Documents/workspace_donkey Warning \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0 ~/Documents/workspace_donkey \u306b\u3057\u3066\u3044\u307e\u3059\u3002\u304a\u4f7f\u3044\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u3001\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u306f\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u6307\u5b9a\u3067\u5927\u4e08\u592b\u3067\u3059\u3002 1 2 3 4 cd ~/Documents/workspace_donkey git clone https://github.com/autorope/donkeycar/ cd donkeycar git checkout master Warning Simulator\u3068\u9023\u643a\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u4f5c\u696d\u306e\u5f8c\u306b\u3001 git checkout 344127b \u3067 344127b\u306e\u30ea\u30d3\u30b8\u30e7\u30f3\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 Warning Proxy\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001 git config --global http.proxy http://proxy.aaa.com:8080 \u7b49\u3067Proxy\u3092\u4e8b\u524d\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3002","title":"Git clone"},{"location":"2.dev/#conda","text":"1 2 conda env create -f install/envs/mac.yml source activate donkey Console\u306b(donkey) \u306e\u6587\u5b57\u5217\u304c\u3067\u304d\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002 Warining conda\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\u4eba\u306f\u3001 miniconda \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Conda\u74b0\u5883"},{"location":"2.dev/#tensorflow","text":"1 pip install tensorflow==1.8.0","title":"TensorFlow\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"2.dev/#_2","text":"1 pip install -e .","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"2.dev/#_3","text":"1 donkey createcar ~/mycar","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210"},{"location":"3.training/","text":"Donkey Car \u5b66\u7fd2 Summary Donkey Car Simulator\u3068\u306e\u9023\u643a\u306f\u3001DonkeyCar v2.5.7\u3067\u306f\u5ec3\u6b62\u3002\u305d\u306e\u305f\u3081\u3001Donkey Car Simulator\u3068\u9023\u643a\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Revision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002 Donkey Car\u306e\u5b66\u7fd2\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002Donkey Car\u306e\u5b66\u7fd2\u306f\u3001RapPi3\u5074\u3067\u306f\u306a\u304f\u3001PC\u5074\u3067\u304a\u3053\u306a\u3044\u307e\u3059\u3002\u4e00\u822c\u7684\u306aPC\u306720-30\u5206\u7a0b\u5ea6\u306e\u5b66\u7fd2\u3001GPU\u642d\u8f09\u306ePC\u3067\u6570\u5206\u306e\u5b66\u7fd2\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002 \u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u306e\u6e96\u5099 Donkey Simulator\u3082\u3057\u304f\u306fDonkey Car\u3067\u4f5c\u6210\u3057\u305f\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u30c7\u30fc\u30bf\u30fb\u30bb\u30c3\u30c8\u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002 1 2 mkdir ~/mycar/data/sim cp -r /Application/donkey_sim.app/log/ ~/mycar/data/sim/ Warining cp \u5b9f\u884c\u6642\u306b-r\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u6bce\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3068argument list too long \u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3002 \u5b66\u7fd2 1 2 cd ~/mycar python manage.py train --tub=data/sim/ --model=models/mypilot \u5b66\u7fd2\u6e08\u307f\u30c7\u30fc\u30bf\u306fmypilot\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002 \u8ffd\u52a0\u3067\u5b66\u7fd2\u3055\u308c\u308b\u5834\u5408\u306f\u3001--base_model\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u6307\u5b9a\u3057\u3066\u3001\u7d9a\u304d\u304b\u3089\u5b66\u7fd2\u3055\u305b\u308b\u3002 1 python manage.py train --tub=data/sim/ --model=models/newpilot --base_model=models/mypilot \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 ~/workspace_donkey/donkeycar/donkeycar/parts/keras.py Default\u306e\u8a2d\u5b9a\u3067\u306f\u3001\u4e0b\u8a18\u30b3\u30fc\u30c9\u3067\u5b66\u7fd2\u3092\u5b9f\u65bd\u3057\u3066\u3044\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 def default_categorical (): img_in = Input ( shape = ( 120 , 160 , 3 ), name = 'img_in' ) # First layer, input layer, Shape comes from camera.py resolution, RGB x = img_in x = Convolution2D ( 24 , ( 5 , 5 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 24 features, 5 pixel x 5 pixel kernel (convolution, feauture) window, 2wx2h stride, relu activation x = Convolution2D ( 32 , ( 5 , 5 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 32 features, 5px5p kernel window, 2wx2h stride, relu activatiion x = Convolution2D ( 64 , ( 5 , 5 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 64 features, 5px5p kernal window, 2wx2h stride, relu x = Convolution2D ( 64 , ( 3 , 3 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 64 features, 3px3p kernal window, 2wx2h stride, relu x = Convolution2D ( 64 , ( 3 , 3 ), strides = ( 1 , 1 ), activation = 'relu' )( x ) # 64 features, 3px3p kernal window, 1wx1h stride, relu # Possibly add MaxPooling (will make it less sensitive to position in image). Camera angle fixed, so may not to be needed x = Flatten ( name = 'flattened' )( x ) # Flatten to 1D (Fully connected) x = Dense ( 100 , activation = 'relu' )( x ) # Classify the data into 100 features, make all negatives 0 x = Dropout ( . 1 )( x ) # Randomly drop out (turn off) 10% of the neurons (Prevent overfitting) x = Dense ( 50 , activation = 'relu' )( x ) # Classify the data into 50 features, make all negatives 0 x = Dropout ( . 1 )( x ) # Randomly drop out 10% of the neurons (Prevent overfitting) # categorical output of the angle angle_out = Dense ( 15 , activation = 'softmax' , name = 'angle_out' )( x ) # Connect every input with every output and output 15 hidden units. Use Softmax to give percentage. 15 categories and find best one based off percentage 0.0-1.0 # continous output of throttle throttle_out = Dense ( 1 , activation = 'relu' , name = 'throttle_out' )( x ) # Reduce to 1 number, Positive number only model = Model ( inputs = [ img_in ], outputs = [ angle_out , throttle_out ]) model . compile ( optimizer = 'adam' , loss = { 'angle_out' : 'categorical_crossentropy' , 'throttle_out' : 'mean_absolute_error' }, loss_weights = { 'angle_out' : 0.9 , 'throttle_out' : . 01 }) return model","title":"Donkey Car \u5b66\u7fd2"},{"location":"3.training/#donkey-car","text":"Summary Donkey Car Simulator\u3068\u306e\u9023\u643a\u306f\u3001DonkeyCar v2.5.7\u3067\u306f\u5ec3\u6b62\u3002\u305d\u306e\u305f\u3081\u3001Donkey Car Simulator\u3068\u9023\u643a\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Revision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002 Donkey Car\u306e\u5b66\u7fd2\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002Donkey Car\u306e\u5b66\u7fd2\u306f\u3001RapPi3\u5074\u3067\u306f\u306a\u304f\u3001PC\u5074\u3067\u304a\u3053\u306a\u3044\u307e\u3059\u3002\u4e00\u822c\u7684\u306aPC\u306720-30\u5206\u7a0b\u5ea6\u306e\u5b66\u7fd2\u3001GPU\u642d\u8f09\u306ePC\u3067\u6570\u5206\u306e\u5b66\u7fd2\u304c\u304a\u3053\u306a\u308f\u308c\u307e\u3059\u3002","title":"Donkey Car \u5b66\u7fd2"},{"location":"3.training/#_1","text":"Donkey Simulator\u3082\u3057\u304f\u306fDonkey Car\u3067\u4f5c\u6210\u3057\u305f\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u30c7\u30fc\u30bf\u30fb\u30bb\u30c3\u30c8\u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002 1 2 mkdir ~/mycar/data/sim cp -r /Application/donkey_sim.app/log/ ~/mycar/data/sim/ Warining cp \u5b9f\u884c\u6642\u306b-r\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u6bce\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3068argument list too long \u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3002","title":"\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u306e\u6e96\u5099"},{"location":"3.training/#_2","text":"1 2 cd ~/mycar python manage.py train --tub=data/sim/ --model=models/mypilot \u5b66\u7fd2\u6e08\u307f\u30c7\u30fc\u30bf\u306fmypilot\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002 \u8ffd\u52a0\u3067\u5b66\u7fd2\u3055\u308c\u308b\u5834\u5408\u306f\u3001--base_model\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u6307\u5b9a\u3057\u3066\u3001\u7d9a\u304d\u304b\u3089\u5b66\u7fd2\u3055\u305b\u308b\u3002 1 python manage.py train --tub=data/sim/ --model=models/newpilot --base_model=models/mypilot","title":"\u5b66\u7fd2"},{"location":"3.training/#_3","text":"~/workspace_donkey/donkeycar/donkeycar/parts/keras.py Default\u306e\u8a2d\u5b9a\u3067\u306f\u3001\u4e0b\u8a18\u30b3\u30fc\u30c9\u3067\u5b66\u7fd2\u3092\u5b9f\u65bd\u3057\u3066\u3044\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 def default_categorical (): img_in = Input ( shape = ( 120 , 160 , 3 ), name = 'img_in' ) # First layer, input layer, Shape comes from camera.py resolution, RGB x = img_in x = Convolution2D ( 24 , ( 5 , 5 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 24 features, 5 pixel x 5 pixel kernel (convolution, feauture) window, 2wx2h stride, relu activation x = Convolution2D ( 32 , ( 5 , 5 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 32 features, 5px5p kernel window, 2wx2h stride, relu activatiion x = Convolution2D ( 64 , ( 5 , 5 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 64 features, 5px5p kernal window, 2wx2h stride, relu x = Convolution2D ( 64 , ( 3 , 3 ), strides = ( 2 , 2 ), activation = 'relu' )( x ) # 64 features, 3px3p kernal window, 2wx2h stride, relu x = Convolution2D ( 64 , ( 3 , 3 ), strides = ( 1 , 1 ), activation = 'relu' )( x ) # 64 features, 3px3p kernal window, 1wx1h stride, relu # Possibly add MaxPooling (will make it less sensitive to position in image). Camera angle fixed, so may not to be needed x = Flatten ( name = 'flattened' )( x ) # Flatten to 1D (Fully connected) x = Dense ( 100 , activation = 'relu' )( x ) # Classify the data into 100 features, make all negatives 0 x = Dropout ( . 1 )( x ) # Randomly drop out (turn off) 10% of the neurons (Prevent overfitting) x = Dense ( 50 , activation = 'relu' )( x ) # Classify the data into 50 features, make all negatives 0 x = Dropout ( . 1 )( x ) # Randomly drop out 10% of the neurons (Prevent overfitting) # categorical output of the angle angle_out = Dense ( 15 , activation = 'softmax' , name = 'angle_out' )( x ) # Connect every input with every output and output 15 hidden units. Use Softmax to give percentage. 15 categories and find best one based off percentage 0.0-1.0 # continous output of throttle throttle_out = Dense ( 1 , activation = 'relu' , name = 'throttle_out' )( x ) # Reduce to 1 number, Positive number only model = Model ( inputs = [ img_in ], outputs = [ angle_out , throttle_out ]) model . compile ( optimizer = 'adam' , loss = { 'angle_out' : 'categorical_crossentropy' , 'throttle_out' : 'mean_absolute_error' }, loss_weights = { 'angle_out' : 0.9 , 'throttle_out' : . 01 }) return model","title":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9"},{"location":"4.run_sim/","text":"Donkey Car\u3067\u306e\u5b9f\u884c(Simulator) Summary Donkey Car Simulator\u3068\u306e\u9023\u643a\u306f\u3001DonkeyCar v2.5.7\u3067\u306f\u5ec3\u6b62\u3002\u305d\u306e\u305f\u3081\u3001Donkey Car Simulator\u3068\u9023\u643a\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Revision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002 Simulator\u3067\u306e\u5b9f\u884c 1 donkey sim --model=models/mypilot Simulator\u5074\u306e\u9023\u643a Simulator\u3068\u306e\u9023\u643a \u901a\u4fe1\u306fWebsocket\u3067\u304a\u3053\u306a\u308f\u308c\u308b\u3002Simulator\u304b\u308930ms\u306b1\u56de\u3001160x120\u30d4\u30af\u30bb\u30eb\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u306e\u3067\u3001 ~/workspace_donkey/donkeycar/parts/keras.py \u306b\u6e21\u3055\u308c\u3001model.predict\u3067\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u5165\u529b\u306b\u3001Steering\u3068Throttle\u306e2\u5024\u3092\u53d6\u5f97\u3057\u3001\u305d\u306e\u5024\u3067Simulator\u3092\u5236\u5fa1\u3057\u3066\u3044\u308b\u3002 ~/workspace_donkey/donkeycar/donkeycar/parts/simulation.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 def telemetry ( self , sid , data ): \"\"\" Callback when we get new data from Unity simulator. We use it to process the image, do a forward inference, then send controls back to client. Takes sid (?) and data, a dictionary of json elements. \"\"\" if data : # The current steering angle of the car last_steering = float ( data [ \"steering_angle\" ]) # The current throttle of the car last_throttle = float ( data [ \"throttle\" ]) # The current speed of the car speed = float ( data [ \"speed\" ]) # The current image from the center camera of the car imgString = data [ \"image\" ] # decode string based data into bytes, then to Image image = Image . open ( BytesIO ( base64 . b64decode ( imgString ))) # then as numpy array image_array = np . asarray ( image ) # optional change to pre-preocess image before NN sees it if self . image_part is not None : image_array = self . image_part . run ( image_array ) # forward pass - inference steering , throttle = self . kpart . run ( image_array ) # filter throttle here, as our NN doesn't always do a greate job throttle = self . throttle_control ( last_steering , last_throttle , speed , throttle ) # simulator will scale our steering based on it's angle based input. # but we have an opportunity for more adjustment here. steering *= self . steering_scale #steering *= 1 # send command back to Unity simulator self . send_control ( steering , throttle )","title":"Donkey Car\u3067\u306e\u5b9f\u884c(Simulator)"},{"location":"4.run_sim/#donkey-carsimulator","text":"Summary Donkey Car Simulator\u3068\u306e\u9023\u643a\u306f\u3001DonkeyCar v2.5.7\u3067\u306f\u5ec3\u6b62\u3002\u305d\u306e\u305f\u3081\u3001Donkey Car Simulator\u3068\u9023\u643a\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001Revision\u306f\u3001 618b2f7 \u307e\u3067\u623b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002","title":"Donkey Car\u3067\u306e\u5b9f\u884c(Simulator)"},{"location":"4.run_sim/#simulator","text":"1 donkey sim --model=models/mypilot","title":"Simulator\u3067\u306e\u5b9f\u884c"},{"location":"4.run_sim/#simulator_1","text":"","title":"Simulator\u5074\u306e\u9023\u643a"},{"location":"4.run_sim/#simulator_2","text":"\u901a\u4fe1\u306fWebsocket\u3067\u304a\u3053\u306a\u308f\u308c\u308b\u3002Simulator\u304b\u308930ms\u306b1\u56de\u3001160x120\u30d4\u30af\u30bb\u30eb\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u306e\u3067\u3001 ~/workspace_donkey/donkeycar/parts/keras.py \u306b\u6e21\u3055\u308c\u3001model.predict\u3067\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u5165\u529b\u306b\u3001Steering\u3068Throttle\u306e2\u5024\u3092\u53d6\u5f97\u3057\u3001\u305d\u306e\u5024\u3067Simulator\u3092\u5236\u5fa1\u3057\u3066\u3044\u308b\u3002 ~/workspace_donkey/donkeycar/donkeycar/parts/simulation.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 def telemetry ( self , sid , data ): \"\"\" Callback when we get new data from Unity simulator. We use it to process the image, do a forward inference, then send controls back to client. Takes sid (?) and data, a dictionary of json elements. \"\"\" if data : # The current steering angle of the car last_steering = float ( data [ \"steering_angle\" ]) # The current throttle of the car last_throttle = float ( data [ \"throttle\" ]) # The current speed of the car speed = float ( data [ \"speed\" ]) # The current image from the center camera of the car imgString = data [ \"image\" ] # decode string based data into bytes, then to Image image = Image . open ( BytesIO ( base64 . b64decode ( imgString ))) # then as numpy array image_array = np . asarray ( image ) # optional change to pre-preocess image before NN sees it if self . image_part is not None : image_array = self . image_part . run ( image_array ) # forward pass - inference steering , throttle = self . kpart . run ( image_array ) # filter throttle here, as our NN doesn't always do a greate job throttle = self . throttle_control ( last_steering , last_throttle , speed , throttle ) # simulator will scale our steering based on it's angle based input. # but we have an opportunity for more adjustment here. steering *= self . steering_scale #steering *= 1 # send command back to Unity simulator self . send_control ( steering , throttle )","title":"Simulator\u3068\u306e\u9023\u643a"}]}